---
- block:
  - name: Check if ~/.kube/config already exists
    stat:
      path: $HOME/.kube/config
    register: kube_config

  - name: Init control plane
    shell: | 
      NODENAME=$(hostname -s) && \
      sudo kubeadm config images pull && \
      sudo kubeadm init --apiserver-advertise-address={{ local_ip }} --apiserver-cert-extra-sans={{ local_ip }} --pod-network-cidr={{ pod_cidr }} --service-cidr={{ service_cidr }} --node-name "$NODENAME" --ignore-preflight-errors Swap && \
      mkdir -p "$HOME"/.kube && \
      sudo cp -i /etc/kubernetes/admin.conf "$HOME"/.kube/config && \
      sudo chown "$(id -u)":"$(id -g)" "$HOME"/.kube/config
    when: not kube_config.stat.exists
  - name: Create k8s token
    shell: |
      config_path="/vagrant/configs"
      if [ -d $config_path ]; then
        rm -f $config_path/*
      else
        mkdir -p $config_path
      fi
      cp -i /etc/kubernetes/admin.conf $config_path/config
      touch $config_path/join.sh
      chmod +x $config_path/join.sh
      kubeadm token create --print-join-command > $config_path/join.sh
    when: not kube_config.stat.exists
  - name: Install calico network plugin
    shell: |
      # curl https://raw.githubusercontent.com/projectcalico/calico/v{{ calico_version }}/manifests/calico.yaml -O 
      kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v{{ calico_version }}/manifests/calico.yaml 
      sudo -i -u vagrant bash << EOF
      whoami
      mkdir -p /home/vagrant/.kube
      sudo cp /vagrant/configs/config /home/vagrant/.kube/
      sudo chown 1000:1000 /home/vagrant/.kube/config
      EOF
    when: not kube_config.stat.exists
  - name: Open port 6443
    become: true
    shell: |
      iptables -A INPUT -p tcp --dport 6443 -j ACCEPT
      mkdir /etc/iptables
      iptables-save > /etc/iptables/rules.v4
    when: not kube_config.stat.exists


